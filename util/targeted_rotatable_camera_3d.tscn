[gd_scene load_steps=2 format=3 uid="uid://5xssxeelxkgo"]

[sub_resource type="GDScript" id="GDScript_cuk5x"]
script/source = "extends Node3D

@onready var camera: Camera3D = $Camera3D

@export var target: NodePath:
	set(v):
		target = v
		
		if target != null:
			followed_node = get_node(target)
			
			if followed_node != null or (followed_node is not Node3D):
				if target_transition_tween != null:
					target_transition_tween.stop()
					
				target_transition_tween = get_tree().create_tween()
				target_transition_tween.tween_property(self, \"global_position\", v, 0.5).set_trans(Tween.TRANS_CUBIC)
				await target_transition_tween.finished
				target_transition_tween = null
		else:
			followed_node = null

@export var distance: float = 30.0:
	set(v):
		distance = v
		if camera != null:
			camera.position.z = v
@export var scroll_zoom: float = 2.0

var target_transition_tween: Tween = null
var followed_node: Node3D = null

func _ready() -> void:
	camera.position.z = distance

func _process(delta: float) -> void:
	if target_transition_tween == null and followed_node != null:
		global_position = followed_node.global_position

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		if event.button_mask:
			rotation_degrees.y -= event.screen_relative.x
			rotation_degrees.x = clamp(rotation_degrees.x - event.screen_relative.y, -90, 90)
			
	elif event is InputEventMouseButton:
		if event.is_pressed():
			if event.button_index == MOUSE_BUTTON_WHEEL_UP:
				distance -= scroll_zoom
			elif event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
				distance += scroll_zoom
"

[node name="TargetedRotatableCamera3D" type="Node3D"]
script = SubResource("GDScript_cuk5x")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 74.865)
current = true
